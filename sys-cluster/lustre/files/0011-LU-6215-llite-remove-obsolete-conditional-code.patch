From b63795fa3bfd8002351c002c316c53b9f0660636 Mon Sep 17 00:00:00 2001
From: Andreas Dilger <andreas.dilger@intel.com>
Date: Fri, 29 Apr 2016 14:48:52 -0600
Subject: [PATCH 11/19] LU-6215 llite: remove obsolete conditional code

Remove conditional flock/aops code that was only for out-of-tree
vendor kernels but is not relevant anymore.

Linux-commit: 3746e6f93bbf28a25d2d69350ab6bfba02e14654

Signed-off-by: Andreas Dilger <andreas.dilger@intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Change-Id: If119a2da2bbc30a48d872029bd048ea90a3ebbe5
Reviewed-on: http://review.whamcloud.com/19890
Tested-by: Jenkins
Reviewed-by: James Simmons <uja.ornl@yahoo.com>
Reviewed-by: Frank Zago <fzago@cray.com>
Reviewed-by: John L. Hammond <john.hammond@intel.com>
Tested-by: Maloo <hpdd-maloo@intel.com>
Reviewed-by: Dmitry Eremin <dmitry.eremin@intel.com>
Reviewed-by: Oleg Drokin <oleg.drokin@intel.com>
---
 lustre/llite/llite_internal.h |  4 ----
 lustre/llite/llite_lib.c      |  8 --------
 lustre/llite/rw26.c           | 17 -----------------
 3 files changed, 29 deletions(-)

diff --git a/lustre/llite/llite_internal.h b/lustre/llite/llite_internal.h
index 15530dc..adbf9d3 100644
--- a/lustre/llite/llite_internal.h
+++ b/lustre/llite/llite_internal.h
@@ -813,11 +813,7 @@ struct ll_cl_context *ll_cl_find(struct file *file);
 void ll_cl_add(struct file *file, const struct lu_env *env, struct cl_io *io);
 void ll_cl_remove(struct file *file, const struct lu_env *env);
 
-#ifndef MS_HAS_NEW_AOPS
 extern const struct address_space_operations ll_aops;
-#else
-extern const struct address_space_operations_ext ll_aops;
-#endif
 
 /* llite/file.c */
 extern struct file_operations ll_file_operations;
diff --git a/lustre/llite/llite_lib.c b/lustre/llite/llite_lib.c
index cf17367..d1050d4 100644
--- a/lustre/llite/llite_lib.c
+++ b/lustre/llite/llite_lib.c
@@ -232,14 +232,6 @@ static int client_common_fill_super(struct super_block *sb, char *md, char *dt,
         if (sbi->ll_flags & LL_SBI_USER_XATTR)
                 data->ocd_connect_flags |= OBD_CONNECT_XATTR;
 
-#ifdef HAVE_MS_FLOCK_LOCK
-        /* force vfs to use lustre handler for flock() calls - bug 10743 */
-        sb->s_flags |= MS_FLOCK_LOCK;
-#endif
-#ifdef MS_HAS_NEW_AOPS
-        sb->s_flags |= MS_HAS_NEW_AOPS;
-#endif
-
         if (sbi->ll_flags & LL_SBI_FLOCK)
                 sbi->ll_fop = &ll_file_operations_flock;
         else if (sbi->ll_flags & LL_SBI_LOCALFLOCK)
diff --git a/lustre/llite/rw26.c b/lustre/llite/rw26.c
index ee17a73..b362532 100644
--- a/lustre/llite/rw26.c
+++ b/lustre/llite/rw26.c
@@ -806,7 +806,6 @@ static int ll_migratepage(struct address_space *mapping,
 }
 #endif
 
-#ifndef MS_HAS_NEW_AOPS
 const struct address_space_operations ll_aops = {
 	.readpage	= ll_readpage,
 	.direct_IO	= ll_direct_IO,
@@ -821,19 +820,3 @@ const struct address_space_operations ll_aops = {
 	.migratepage	= ll_migratepage,
 #endif
 };
-#else
-const struct address_space_operations_ext ll_aops = {
-	.orig_aops.readpage		= ll_readpage,
-	.orig_aops.direct_IO		= ll_direct_IO,
-	.orig_aops.writepage		= ll_writepage,
-	.orig_aops.writepages		= ll_writepages,
-	.orig_aops.set_page_dirty	= __set_page_dirty_nobuffers,
-	.orig_aops.invalidatepage	= ll_invalidatepage,
-	.orig_aops.releasepage		= ll_releasepage,
-#ifdef CONFIG_MIGRATION
-	.orig_aops.migratepage		= ll_migratepage,
-#endif
-	.write_begin			= ll_write_begin,
-	.write_end			= ll_write_end
-};
-#endif
-- 
2.8.2

